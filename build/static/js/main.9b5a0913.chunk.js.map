{"version":3,"sources":["helpers/fetchWeatherApp.js","hooks/useFetch.js","components/Weather.js","components/UserInterface/Error.js","helpers/showWeatherOrError.js","components/UserInterface/Loading.js","components/Header.js","hooks/useForm.js","helpers/isValidWeatherForm.js","components/WeatherForm/InputCity.js","components/WeatherForm/SelectCountry.js","components/WeatherForm/SubmitButton.js","components/WeatherForm.js","WeatherApp.js","index.js"],"names":["fetchWeatherApp","country","city","a","process","fetch","request","json","response","weatherAPI","status","cod","name","weather","main","useFetch","setLoading","setDisabled","isMounted","useRef","useState","setWeather","useEffect","current","executeFetch","Weather","temp","humidity","feels_like","temp_max","temp_min","className","Error","error","height","style","alignItems","display","justifyContent","showWeatherOrError","Loading","Header","title","href","useForm","initialState","formValues","setFormValues","handleChange","event","target","value","reset","newState","isValidWeatherForm","trim","length","validator","isEmpty","isAlpha","isUppercase","msgErrorWeather","isValid","ignore","InputCity","type","placeholder","onChange","SelectCountry","defaultValue","SubmitButton","disabled","WeatherForm","setData","msgError","setMsgError","autoComplete","onSubmit","preventDefault","escapedCountry","escape","escapedCity","data","WeatherApp","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b5a0913.chunk.js","sourcesContent":["const fetchWeatherApp = async( country, city ) => {\r\n    const apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n    const request = await fetch( `https://api.openweathermap.org/data/2.5/weather?q=${ city },${ country }&appid=${ apiKey }&units=metric` );\r\n    const response = await request.json();\r\n\r\n    const weatherAPI = {\r\n        status: response.cod,\r\n        name: response?.name,\r\n        weather: response?.main\r\n    };\r\n\r\n    return weatherAPI;\r\n};\r\n\r\nexport default fetchWeatherApp;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport fetchWeatherApp from '../helpers/fetchWeatherApp';\r\n\r\nconst useFetch = ( setLoading, setDisabled, { country, city } ) => {\r\n    const isMounted = useRef( true );\r\n    const [ weather, setWeather ] = useState( { status: '', name: '', weather: '' } );\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            isMounted.current = false;\r\n        };\r\n    }, [] );\r\n\r\n    useEffect( () => {\r\n        const executeFetch = async() => {\r\n            if( country !== '' && city !== '' ) {\r\n                const weatherAPI = await fetchWeatherApp( country, city );\r\n            \r\n                isMounted.current && setWeather( weather => {\r\n                                        return {\r\n                                            ...weather,\r\n                                            ...weatherAPI\r\n                                        };\r\n                                    } );\r\n\r\n                setLoading( false );\r\n            }\r\n\r\n            setDisabled( false );\r\n        };\r\n\r\n        executeFetch();\r\n    }, [ setLoading, setDisabled, country, city ] );\r\n\r\n    return weather;\r\n};\r\n\r\nexport default useFetch;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Weather = ( { name, weather } ) => {\r\n    const { temp, humidity, feels_like, temp_max, temp_min } = weather;\r\n\r\n    return (\r\n        <div className=\"col s12 card-panel blue darken-2\">\r\n            <div className=\"white-text\">\r\n                <h2>{ name }</h2>\r\n                <p className=\"temperatura\">{ temp } ºC</p>\r\n                <p>Humedad: { humidity } %</p>\r\n                <p>Sensación térmica: { feels_like } ºC</p>\r\n                <p>Temperatura Máxima: { temp_max } ºC</p>\r\n                <p>Temperatura Mínima: { temp_min } ºC</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nWeather.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    weather: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ( { error, height } ) => {\r\n    return (\r\n        <div style={ { alignItems: 'center', display: 'flex', height: height, justifyContent: 'center' } }>\r\n            <p className=\"error\">{ error }</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nError.propTypes = {\r\n    error: PropTypes.string.isRequired,\r\n    height: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;\r\n","import Weather from '../components/Weather';\r\nimport Error from '../components/UserInterface/Error';\r\n\r\nconst showWeatherOrError = ( { status, name, weather } ) => {\r\n    if( status === 200 ) {\r\n        return <Weather name={ name } weather={ weather } />\r\n    }\r\n\r\n    if( status === '404' ) {\r\n        return <Error error=\"No se pudo obtener el clima, de la ciudad especificada.\" height=\"200px\" />\r\n    }\r\n};\r\n\r\nexport default showWeatherOrError;\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div style={ { alignItems: 'center', display: 'flex', height: '200px', justifyContent: 'center' } }>\r\n                <div className=\"preloader-wrapper active\">\r\n                    <div className=\"spinner-layer spinner-blue-only \">\r\n                        <div className=\"circle-clipper left\">\r\n                            <div className=\"circle\"></div>\r\n                        </div><div className=\"gap-patch\">\r\n                            <div className=\"circle\"></div>\r\n                        </div><div className=\"circle-clipper right\">\r\n                            <div className=\"circle\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ( { title } ) => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper indigo darken-4\">\r\n                <a href=\"#!\" className=\"brand-logo\">{ title }</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from 'react';\r\n\r\nconst useForm = ( initialState = {} ) => {\r\n    const [ formValues, setFormValues ] = useState( initialState );\r\n\r\n    const handleChange = ( event ) => {\r\n        setFormValues( {\r\n            ...formValues,\r\n            [ event.target.name ]: event.target.value\r\n        } );\r\n    };\r\n\r\n    const reset = ( newState = initialState ) => {\r\n        setFormValues( newState );\r\n    };\r\n\r\n    return [ formValues, handleChange, reset ];\r\n};\r\n\r\nexport default useForm;\r\n","import validator from 'validator';\r\n\r\nconst isValidWeatherForm = ( country, city ) => {\r\n    if( country.trim().length < 2 || validator.isEmpty( country ) || !validator.isAlpha( country, [ 'es-ES' ] ) || !validator.isUppercase( country ) ) {\r\n        return {\r\n            msgErrorWeather: 'Ingrese un país válido.',\r\n            isValid: false\r\n        };\r\n    } else if( city.trim().length < 2 || validator.isEmpty( city ) || !validator.isAlpha( city, [ 'es-ES' ], { ignore: ' ' } ) ) {\r\n        return {\r\n            msgErrorWeather: 'Ingrese una ciudad válida.',\r\n            isValid: false\r\n        };\r\n    }\r\n\r\n    return {\r\n        msgErrorWeather: null,\r\n        isValid: true\r\n    };\r\n};\r\n\r\nexport default isValidWeatherForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputCity = ( { city, handleChange } ) => {\r\n    return (\r\n        <div className=\"input-field col s12\">\r\n            <input\r\n                type=\"text\"\r\n                name=\"city\"\r\n                placeholder=\"Ciudad...\"\r\n                value={ city }\r\n                onChange={ handleChange }\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nInputCity.propTypes = {\r\n    city: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default InputCity;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SelectCountry = ( { country, handleChange } ) => {\r\n    return (\r\n        <div className=\"input-field col s12\">\r\n            <select\r\n                name=\"country\"\r\n                value={ country }\r\n                onChange={ handleChange }\r\n            >\r\n                <option value=\"\" defaultValue>Seleccione Un País</option>\r\n                <option value=\"AR\">Argentina</option>\r\n                <option value=\"CO\">Colombia</option>\r\n                <option value=\"CR\">Costa Rica</option>\r\n                <option value=\"ES\">España</option>\r\n                <option value=\"US\">Estados Unidos</option>\r\n                <option value=\"MX\">México</option>\r\n                <option value=\"PE\">Perú</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nSelectCountry.propTypes = {\r\n    country: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SelectCountry;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SubmitButton = ( { disabled } ) => {\r\n    return (\r\n        <div className=\"input-field col s12 center-align\">\r\n            <button\r\n                type=\"submit\"\r\n                className=\"waves-effect waves-light btn indigo darken-4\"\r\n                disabled={ disabled }\r\n            >\r\n                Obtener clima\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nSubmitButton.propTypes = {\r\n    disabled: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport validator from 'validator';\r\nimport useForm from '../hooks/useForm';\r\nimport isValidWeatherForm from '../helpers/isValidWeatherForm';\r\nimport Error from './UserInterface/Error';\r\nimport InputCity from './WeatherForm/InputCity';\r\nimport SelectCountry from './WeatherForm/SelectCountry';\r\nimport SubmitButton from './WeatherForm/SubmitButton';\r\n\r\nconst WeatherForm = ( { setData, setLoading, disabled, setDisabled } ) => {\r\n    const [ formValues, handleChange, reset ] = useForm( { country: '', city: '' } );\r\n    const { country, city } = formValues;\r\n\r\n    const [ msgError, setMsgError ] = useState( null );\r\n\r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n\r\n        setDisabled( true );\r\n\r\n        const escapedCountry = validator.escape( country );\r\n        const escapedCity = validator.escape( city );\r\n\r\n        const { msgErrorWeather, isValid } = isValidWeatherForm( escapedCountry, escapedCity );\r\n        setMsgError( msgErrorWeather );\r\n\r\n        if( isValid ) {\r\n            setLoading( true );\r\n\r\n            setData( ( data ) => {\r\n                if( data.country === escapedCountry && data.city === escapedCity ) {\r\n                    setLoading( false );\r\n\r\n                    return {\r\n                        ...data,\r\n                        city: ''\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...data,\r\n                    country: escapedCountry,\r\n                    city: escapedCity\r\n                };\r\n            } );\r\n\r\n            reset( {\r\n                ...formValues,\r\n                city: ''\r\n            } );\r\n\r\n            return;\r\n        }\r\n\r\n        setDisabled( false );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            { msgError && <Error error={ msgError } height=\"auto\" /> }\r\n\r\n            <form autoComplete=\"off\" onSubmit={ handleSubmit }>\r\n                <SelectCountry\r\n                    country={ country }\r\n                    handleChange={ handleChange }\r\n                />\r\n\r\n                <InputCity\r\n                    city={ city }\r\n                    handleChange={ handleChange }\r\n                />\r\n\r\n                <SubmitButton disabled={ disabled } />\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nWeatherForm.propTypes = {\r\n    setData: PropTypes.func.isRequired,\r\n    setLoading: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool.isRequired,\r\n    setDisabled: PropTypes.func.isRequired\r\n};\r\n\r\nexport default WeatherForm;\r\n","import React, { useState } from 'react';\r\nimport useFetch from './hooks/useFetch';\r\nimport showWeatherOrError from './helpers/showWeatherOrError';\r\nimport Loading from './components/UserInterface/Loading';\r\nimport Header from './components/Header';\r\nimport WeatherForm from './components/WeatherForm';\r\n\r\nconst WeatherApp = () => {\r\n    const [ loading, setLoading ] = useState( false );\r\n    const [ disabled, setDisabled ] = useState( false );\r\n    const [ data, setData ] = useState( { country: '', city: '' } );\r\n\r\n    const weather = useFetch( setLoading, setDisabled, { ...data } );\r\n\r\n    return (\r\n        <>\r\n            <Header title=\"Clima App\" />\r\n\r\n            <div className=\"contenedor-form\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col m6 s12\">\r\n                            <WeatherForm\r\n                                setData={ setData }\r\n                                setLoading={ setLoading }\r\n                                disabled={ disabled }\r\n                                setDisabled={ setDisabled }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col m6 s12\">\r\n                            {\r\n                                loading\r\n                                    ?\r\n                                        <Loading />\r\n                                    :\r\n                                        showWeatherOrError( weather )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport WeatherApp from './WeatherApp';\r\n\r\nReactDOM.render( <WeatherApp />, document.getElementById( 'root' ) );\r\n"],"sourceRoot":""}